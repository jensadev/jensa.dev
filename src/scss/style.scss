@import "reset";
@import "color-tokens";
@import "vars";
@import "../../node_modules/modularscale-sass/stylesheets/modularscale";

$modularscale: (
    base: 1rem,
    ratio: 1.414,
);

:root {
    --color-mode: "light";
    --color-white: #{$white};
    --color-dark: #{$black};
    --color-darker: #{$blacker};
    --color-darkest: #{$blackest};
    --color-light: #{$light};
    --color-lightness: #{$lightness};

    --color-primary: #{$primary};
    --color-primary-darker: #{$primary-darken};
    --color-secondary: #{$secondary};
    --color-secondary-darker: #{$secondary-darken};
    --color-tertiary: #{$tertiary};
    --color-tertiary-darker: #{$tertiary-darken};

    --background: #{$white};
    --variant: #{$whiter};
    --text-color: #{$black};

    --selection-text: #{$light};
    --selection-background: #{$black};

    --primary: #{$primary-darken};
    --primary-hover: #{$primary};
    --secondary: #{$secondary-darken};
    --secondary-hover: #{$secondary};
    --tertiary: #{$tertiary-darken};
    --tertiary-hover: #{$tertiary};
}

@media (prefers-color-scheme: dark) {
    :root {
        --color-mode: "dark";
    }

    :root:not([data-user-color-scheme]) {
        --background: var(--color-dark);
        --variant: var(--color-darker);
        --text-color: var(--color-light);
        --primary: var(--color-primary);
        --primary-hover: var(--color-primary-lighter);
        --secondary: var(--color-secondary);
        --secondary-hover: var(--color-secondary-lighter);
        --tertiary: var(--color-tertiary);
        --tertiary-hover: var(--color-tertiary-lighter);

        --selection-text: var(--color-dark);
        --selection-background: var(--color-light);
    }
}

[data-user-color-scheme="dark"] {
    --background: var(--color-dark);
    --variant: var(--color-darker);
    --text-color: var(--color-light);
    --primary: var(--color-primary);
    --primary-hover: var(--color-primary-lighter);
    --secondary: var(--color-secondary);
    --secondary-hover: var(--color-secondary-lighter);
    --tertiary: var(--color-tertiary);
    --tertiary-hover: var(--color-tertiary-lighter);

    --selection-text: var(--color-dark);
    --selection-background: var(--color-light);
}

* {
    transition: background 500ms ease-in-out, color 200ms ease;
}

body,
html {
    height: 100%;
    overflow-x: hidden;
}

body {
    font-size: ms(1);
    font-family: $sans-serif;
    font-weight: 400;
    line-height: 1.6;
    display: flex;
    flex-direction: column;
    scroll-behavior: smooth;
    background: var(--background);
    color: var(--text-color);
}

main {
    flex: 1 0 auto;
    background-color: var(--variant);
}

a {
    color: var(--secondary);
    &:visited {
        color: var(--secondary);
    }
    &:hover {
        color: var(--secondary-hover);
    }
}

button {
    color: var(--tertiary);
    cursor: pointer;
    background-color: transparent;
    border: none;
    padding: 0;
    margin: 0;
    line-height: 1;
    &:hover {
        color: var(--tertiary-hover);
    }
}

h1,
h2,
h3 {
    line-height: 1.2;
}

h1,
h2 {
    font-family: $serif;
}

h1 {
    font-size: ms(4);
    font-weight: 900;
}

h1 > a > svg {
    width: ms(2);
    height: ms(2);
}

h2,
h3,
h4 {
    font-weight: 600;
}

h2 {
    font-size: ms(3);
}

h3 {
    font-size: ms(2);
    margin-bottom: ms(-2);
}

h4 {
    font-size: ms(1);
}

p {
    max-width: 60ch;
    margin-top: 0;
    margin-bottom: ms(0);
}

blockquote {
    padding-left: ms(1);
    font-style: italic;
    font-size: ms(2);
    font-weight: 300;
}

code {
    font-family: $mono;
    padding: ms(-4);
}

pre {
    width: 100vw;
    margin-left: calc(50% - 50vw) !important;
    display: flex;
    align-content: center;
    &:nth-of-type(even) {
        clip-path: map-get($code-paths, 1);
    }
    &:nth-of-type(odd) {
        clip-path: map-get($code-paths, 2);
    }
    code {
        width: 100%;
        display: inline-block;
        margin-left: auto !important;
        margin-right: auto !important;
        padding: ms(1) !important;
        max-width: 45.18rem !important;
    }
}

ol,
ul {
    margin-top: ms(-1);
    margin-bottom: ms(-1);
}

.container {
    margin-left: auto;
    margin-right: auto;
    padding-left: ms(1);
    padding-right: ms(1);
    max-width: 45.18rem;
}

.site-head {
    padding-top: ms(1);
    padding-bottom: ms(1);
    background-color: var(--variant);
    &__inner {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
    }
    &__title {
        font-weight: 900;
        font-size: ms(2);
    }

    &__brand {
        text-decoration: none;
        &:hover {
            text-decoration: underline;
        }
    }
}

.site-foot {
    padding-top: ms(3);
    padding-bottom: ms(4);
    &__inner {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        @media (max-width: map-get($breakpoints, md )) {
            display: block;
        }
    }
}

.site-head,
.site-foot {
    a {
        color: var(--primary);
        &:visited {
            color: var(--primary);
        }
        &:hover {
            color: var(--primary-hover);
        }
    }
}

.site-intro {
    background-color: var(--background);
    padding-top: ms(2);
    padding-bottom: ms(2);
    margin-bottom: ms(1);
}

.site-lead {
    margin-top: ms(1);
    p:last-child {
        margin-bottom: 0;
    }
}

.nav {
    display: flex;
    &-item {
        font-size: ms(1);
        text-decoration: none;
        &:not(:first-child) {
            padding-left: ms(-2);
        }
        &:hover {
            text-decoration: underline;
        }
    }
}

.post {
    &-list {
        list-style: none;
        display: flex;
        flex-direction: column;
        margin-top: ms(0);
        margin-bottom: ms(0);
        padding-left: 0rem;
        padding-right: 0rem;
        &__title {
            display: flex;
            align-items: baseline;
            justify-content: space-between;
        }
        h3 {
            margin-bottom: 0;
        }
        li {
            margin-bottom: ms(-1);
        }
    }
    &-foot {
        padding-top: ms(1);
        padding-bottom: ms(1);
    }
}

.active {
    font-weight: 600;
}

.lead {
    font-size: ms(2);
    font-weight: 300;
}

.flex-reverse {
    flex-direction: column-reverse !important;
}

.tag {
    &-list {
        list-style: none;
        display: flex;
        padding-left: 0rem;
        padding-right: 0rem;
    }
    &-item {
        padding-right: ms(1);
    }
}

.anchor {
    text-decoration: none;
    margin-left: ms(-2);
}
// a[href].anchor,
// a[href].anchor:visited {
//     visibility: hidden;
// }
// :focus > a[href].anchor,
// :focus > a[href].anchor:visited,
// :hover > a[href].anchor,
// :hover > a[href].anchor:visited,
// a[href].anchor:focus,
// a[href].anchor:focus:visited {
//     visibility: visible;
// }

.text-small {
    font-size: ms(0);
    margin-bottom: ms(-2);
    line-height: 1.4;
}

.skip-link {
    &:not(:focus) {
        border: 0;
        clip: rect(0 0 0 0);
        height: auto;
        margin: 0;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
        white-space: nowrap;
    }
}

.visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: auto;
    margin: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
}

.full-bleed {
    width: 100vw;
    margin-left: calc(50% - 50vw);
}

::selection {
    background-color: var(--selection-background);
    color: var(--selection-text);
}

::-moz-selection {
    background-color: var(--selection-background);
    color: var(--selection-text);
}

.no-js .user-toggle {
    display: none;
}

.toggle-button {
    display: inline-flex;
    background-color: transparent;
    color: var(--primary);
    border: none;
    padding: 0;
    margin: 0;
    &:hover > span > svg > path {
        fill-rule: inherit;
    }
    &__icon {
        color: var(--primary);
        transform: translateY(1px); /* Optical adjustment */
        transition: color 200ms ease;
        height: ms(1);
        width: ms(1);
        &:hover {
            color: var(--text-color);
        }
        svg {
            height: ms(1);
            width: ms(1);
        }
    }
}

.d-none {
    display: none;
}

.pr-md-3 {
    padding-right: ms(3);
    @media (max-width: map-get($breakpoints, md )) {
        padding-right: 0;
    }
}
