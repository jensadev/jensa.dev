body {
    color: var(--color-fg);
    background-color: var(--color-bg);
    font-size: var(--step-1);
    font-family: var(--font-base);
    font-weight: 400;
    line-height: 1.333;
    font-variant-numeric: oldstyle-nums;
}

h1,
h2,
h3 {
    line-height: 1;
    letter-spacing: var(--tracking);
}

h1 {
    font-size: var(--step-5);
    font-weight: 800;
    text-transform: uppercase;
}
h2 {
    font-size: var(--step-3);
}
h3 {
    font-size: var(--step-2);
}

p,
li,
blockquote:not([class]) {
    max-width: 55ch;
}

h1,
h2,
h3 {
    max-width: 20ch;
}

/* More generic elements */
blockquote:not([class]) {
    font-family: var(--font-serif);
    font-size: var(--step-2);
}

/* Markdown blockquuote:not([class])s aren't ideal, so we're presuming the person quoted is the last p */
// blockquote:not([class]) p:last-of-type {
//     font-family: var(--font-base);
//     font-size: var(--step-1);
//     font-weight: normal;
// }

svg {
    height: 2ex;
    width: auto;
    flex: none;
}

img {
    height: auto;
    width: 100%;
}

[role='list'] {
    padding: 0;
}

/* Base interactive elements */

a {
    color: currentColor;
    text-decoration: underline dashed var(--color-secondary);
}

a:hover {
    text-decoration-style: solid;
}

:focus {
    outline: 2px solid;
    outline-offset: 0.3ch;
}

:target {
    scroll-margin-top: 2ex;
}

main:focus {
    outline: none;
}

/* Base selection styles that invert whatever colours are rendered */
::selection {
    background: var(--color-selection);
    color: var(--color-fg);
}

p > code {
    color: var(--color-fg);
    background-color: var(--color-bg-accent);
}

blockquote {
    // border-left: var(--space-3xs) solid currentColor;
    padding: var(--space-s-m);
    color: var(--color-primary);
    background-color: var(--color-selection);
    > p::before {
        content: '“';
        font-size: var(--step-2);
    }
    > p::after {
        content: '”';
        font-size: var(--step-2);
    }
}

abbr {
    background-color: var(--color-bg-accent);
    text-decoration: underline dashed currentColor;
}

li::marker {
    color: var(--color-bg-accent);
}

/* sometimes color h2 elements with primary color */
h2 {
    color: var(--color-primary);
}
